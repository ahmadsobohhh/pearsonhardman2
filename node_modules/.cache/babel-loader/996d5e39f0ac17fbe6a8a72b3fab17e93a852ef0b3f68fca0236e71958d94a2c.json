{"ast":null,"code":"import\"./ServiceLawyer.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ServiceLawyer=_ref=>{let{services,chooseServices,handleChange,name}=_ref;const options=name===\"services\"?[\"Corporate Law\",\"Criminal Law\",\"Family Law\",\"Tax Law\"]:[\"John Doe\",\"Jane Smith\",\"Michael Johnson\",\"Emily Davis\"];return/*#__PURE__*/_jsxs(\"div\",{className:\"service-lawyer\",children:[/*#__PURE__*/_jsx(\"label\",{children:services}),/*#__PURE__*/_jsxs(\"select\",{onChange:handleChange,name:name,className:\"select-input\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:chooseServices}),options.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option},option))]})]});};export default ServiceLawyer;","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","ServiceLawyer","_ref","services","chooseServices","handleChange","name","options","className","children","onChange","value","map","option"],"sources":["/Users/hamada/Desktop/testing/pearsonhardman2/src/components/ServiceLawyer.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport \"./ServiceLawyer.css\";\n\nconst ServiceLawyer = ({ services, chooseServices, handleChange, name }) => {\n  const options =\n    name === \"services\"\n      ? [\"Corporate Law\", \"Criminal Law\", \"Family Law\", \"Tax Law\"]\n      : [\"John Doe\", \"Jane Smith\", \"Michael Johnson\", \"Emily Davis\"];\n\n  return (\n    <div className=\"service-lawyer\">\n      <label>{services}</label>\n      <select onChange={handleChange} name={name} className=\"select-input\">\n        <option value=\"\">{chooseServices}</option>\n        {options.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nServiceLawyer.propTypes = {\n  services: PropTypes.string.isRequired,\n  chooseServices: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default ServiceLawyer;\n"],"mappings":"AACA,MAAO,qBAAqB,CAAC,OAAAA,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAsD,IAArD,CAAEC,QAAQ,CAAEC,cAAc,CAAEC,YAAY,CAAEC,IAAK,CAAC,CAAAJ,IAAA,CACrE,KAAM,CAAAK,OAAO,CACXD,IAAI,GAAK,UAAU,CACf,CAAC,eAAe,CAAE,cAAc,CAAE,YAAY,CAAE,SAAS,CAAC,CAC1D,CAAC,UAAU,CAAE,YAAY,CAAE,iBAAiB,CAAE,aAAa,CAAC,CAElE,mBACEN,KAAA,QAAKQ,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BX,IAAA,UAAAW,QAAA,CAAQN,QAAQ,CAAQ,CAAC,cACzBH,KAAA,WAAQU,QAAQ,CAAEL,YAAa,CAACC,IAAI,CAAEA,IAAK,CAACE,SAAS,CAAC,cAAc,CAAAC,QAAA,eAClEX,IAAA,WAAQa,KAAK,CAAC,EAAE,CAAAF,QAAA,CAAEL,cAAc,CAAS,CAAC,CACzCG,OAAO,CAACK,GAAG,CAAEC,MAAM,eAClBf,IAAA,WAAqBa,KAAK,CAAEE,MAAO,CAAAJ,QAAA,CAChCI,MAAM,EADIA,MAEL,CACT,CAAC,EACI,CAAC,EACN,CAAC,CAEV,CAAC,CASD,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}