{"ast":null,"code":"import\"./Message.css\";import{useLanguage}from'../context/LanguageContext';import translations from'../utils/translations';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Message=_ref=>{let{handleChange,name}=_ref;const{language}=useLanguage();return/*#__PURE__*/_jsxs(\"div\",{className:\"message\",children:[/*#__PURE__*/_jsx(\"label\",{children:translations[language].getMessage}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:translations[language].enterMessagePlaceholder,onChange:handleChange,name:name})]});};export default Message;","map":{"version":3,"names":["useLanguage","translations","jsx","_jsx","jsxs","_jsxs","Message","_ref","handleChange","name","language","className","children","getMessage","placeholder","enterMessagePlaceholder","onChange"],"sources":["/Users/hamada/Desktop/testing/pearsonhardman2/src/components/Message.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport \"./Message.css\";\nimport { useLanguage } from '../context/LanguageContext';\nimport translations from '../utils/translations';\n\nconst Message = ({ handleChange, name }) => {\n  const { language } = useLanguage();\n\n  return (\n    <div className=\"message\">\n      <label>{translations[language].getMessage}</label>\n      <textarea\n        placeholder={translations[language].enterMessagePlaceholder}\n        onChange={handleChange}\n        name={name}\n      />\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Message;\n"],"mappings":"AACA,MAAO,eAAe,CACtB,OAASA,WAAW,KAAQ,4BAA4B,CACxD,MAAO,CAAAC,YAAY,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAA4B,IAA3B,CAAEC,YAAY,CAAEC,IAAK,CAAC,CAAAF,IAAA,CACrC,KAAM,CAAEG,QAAS,CAAC,CAAGV,WAAW,CAAC,CAAC,CAElC,mBACEK,KAAA,QAAKM,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBT,IAAA,UAAAS,QAAA,CAAQX,YAAY,CAACS,QAAQ,CAAC,CAACG,UAAU,CAAQ,CAAC,cAClDV,IAAA,aACEW,WAAW,CAAEb,YAAY,CAACS,QAAQ,CAAC,CAACK,uBAAwB,CAC5DC,QAAQ,CAAER,YAAa,CACvBC,IAAI,CAAEA,IAAK,CACZ,CAAC,EACC,CAAC,CAEV,CAAC,CAOD,cAAe,CAAAH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}